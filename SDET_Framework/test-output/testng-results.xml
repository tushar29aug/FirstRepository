<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="9326" started-at="2019-11-17T07:19:22Z" finished-at="2019-11-17T07:19:31Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="9326" started-at="2019-11-17T07:19:22Z" finished-at="2019-11-17T07:19:31Z">
      <class name="com.framework.testCases.LoginTest">
        <test-method status="PASS" signature="set()[pri:0, instance:com.framework.testCases.LoginTest@3abbfa04]" name="set" is-config="true" duration-ms="165" started-at="2019-11-17T12:49:22Z" finished-at="2019-11-17T12:49:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- set -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.framework.testCases.LoginTest@3abbfa04]" name="setUp" is-config="true" duration-ms="3914" started-at="2019-11-17T12:49:22Z" finished-at="2019-11-17T12:49:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="failTest()[pri:0, instance:com.framework.testCases.LoginTest@3abbfa04]" name="failTest" duration-ms="13" started-at="2019-11-17T12:49:26Z" finished-at="2019-11-17T12:49:26Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:286)
	at org.testng.Assert.assertEquals(Assert.java:296)
	at com.framework.testCases.LoginTest.failTest(LoginTest.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.framework.testCases.LoginTest@3abbfa04]" name="tearDown" is-config="true" duration-ms="6" started-at="2019-11-17T12:49:26Z" finished-at="2019-11-17T12:49:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=failTest status=FAILURE method=LoginTest.failTest()[pri:0, instance:com.framework.testCases.LoginTest@3abbfa04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.framework.testCases.LoginTest@3abbfa04]" name="login" duration-ms="4016" started-at="2019-11-17T12:49:26Z" finished-at="2019-11-17T12:49:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.framework.testCases.LoginTest@3abbfa04]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-11-17T12:49:30Z" finished-at="2019-11-17T12:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=LoginTest.login()[pri:0, instance:com.framework.testCases.LoginTest@3abbfa04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="passTest()[pri:0, instance:com.framework.testCases.LoginTest@3abbfa04]" name="passTest" duration-ms="4" started-at="2019-11-17T12:49:30Z" finished-at="2019-11-17T12:49:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.framework.testCases.LoginTest@3abbfa04]" name="tearDown" is-config="true" duration-ms="900" started-at="2019-11-17T12:49:30Z" finished-at="2019-11-17T12:49:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.framework.testCases.LoginTest@3abbfa04]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-11-17T12:49:30Z" finished-at="2019-11-17T12:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=passTest status=SUCCESS method=LoginTest.passTest()[pri:0, instance:com.framework.testCases.LoginTest@3abbfa04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="flush()[pri:0, instance:com.framework.testCases.LoginTest@3abbfa04]" name="flush" is-config="true" duration-ms="289" started-at="2019-11-17T12:49:31Z" finished-at="2019-11-17T12:49:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
      </class> <!-- com.framework.testCases.LoginTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
